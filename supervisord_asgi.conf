[unix_http_server]
file=/tmp/supervisor.sock


[supervisord]

http_port=/tmp/supervisor.sock ; (default is to run a UNIX domain socket server)
;http_port=127.0.0.1:9001  ; (alternately, ip_address:port specifies AF_INET)
;sockchmod=0700              ; AF_UNIX socketmode (AF_INET ignore, default 0700)
;sockchown=nobody.nogroup     ; AF_UNIX socket uid.gid owner (AF_INET ignores)
;umask=022                   ; (process file creation umask;default 022)
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (logging level;default info; others: debug,warn)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)

;nocleanup=true              ; (don't clean up tempfiles at start;default false)
;http_username=user          ; (default is no username (open system))
;http_password=123           ; (default is no password (open system))
;childlogdir=/tmp            ; ('AUTO' child log dir, default $TEMP)
user=root                 ; (default is current user, required if root)
directory=/root/myblog/myblog              ; (default is not to cd during start)
;environment=KEY=value       ; (key value pairs to add to environment)
environment=
	VIRTUAL_ENV=/root/myblog

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as http_username if set
;password=Poison123                ; should be same as http_password if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.

[program:rabbitmq]
command=/usr/sbin/rabbitmq-server
user=root
numprocs=1
startretries = 10
autostart=true
startsecs=5
autorestart=true
redirect_stderr=true
stopwaitsecs=20
stdout_logfile = /var/log/rabbitmq.log
stderr_logfile = /var/log/rabbitmq-error.log
stdout_capture_maxbytes = 33554432
stderr_logfile_maxbyte = 335544320
stderr_logfile_backups = 5

[program:redis]
command=/usr/bin/redis-server /root/myblog/myblog/redis.conf
user=root
numprocs=1
startretries = 10
autostart=true
startsecs=3
autorestart=true
redirect_stderr=true
stopwaitsecs=20
stdout_logfile = /var/log/redis.log
stderr_logfile = /var/log/redis_error.log
stdout_capture_maxbytes = 33554432
stderr_logfile_maxbyte = 335544320
stderr_logfile_backups = 5

[program:nginx]
command=nginx -c /root/myblog/myblog/nginx_new.conf -g 'daemon off;'
directory=/root/myblog/myblog
user=root
startsecs=5
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile = /var/log/nginx.log
stderr_logfile = /var/log/nginx-error.log

#[program:gunicorn]
#command=/root/myblog/bin/gunicorn myblog.wsgi:application -c /root/myblog/myblog/gunicorn.conf
#directory=/root/myblog/myblog
#user=root
#startsecs=5
#autostart=true
#autorestart=true
#redirect_stderr=true
#stdout_logfile = /var/log/gunicorn.log
#stderr_logfile = /var/log/error.log
#environment=
#	VIRTUAL_ENV=/root/myblog



[program:worker]
environment=
	DJANGO_SETTINGS_MODULE=myblog.settings,
	VIRTUAL_ENV=/root/myblog

command=/root/myblog/bin/python3.5 /root/myblog/myblog/manage.py runworker
directory=/root/myblog/myblog
stopsignal=QUIT
numprocs=1
user=root
startretries =10
startsecs=3
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile = /var/log/worker.log
stderr_logfile = /var/log/worker_error.log
stdout_capture_maxbytes = 33554432
stderr_logfile_maxbyte = 335544320
stderr_logfile_backups = 5

[program:daphne]
environment=
	DJANGO_SETTINGS_MODULE=myblog.settings,
	VIRTUAL_ENV=/root/myblog
	
directory=/root/myblog/myblog
command=/root/myblog/bin/daphne myblog.asgi:channel_layer -u /root/myblog/tmp/daphne.sock --root-path /root/myblog/myblog/blog
stopsignal=QUIT
numprocs=1
user=root
startretries =10
startsecs=5
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile = /var/log/daphne.log
stderr_logfile = /var/log/daphne_error.log
stdout_capture_maxbytes = 33554432
stderr_logfile_maxbyte = 335544320
stderr_logfile_backups = 5


[program:celery]
environment=
	DJANGO_SETTINGS_MODULE=myblog.settings,
	C_FORCE_ROOT="true",
	VIRTUAL_ENV=/root/myblog

command=/root/myblog/bin/celery  -A myblog -c 1 --beat worker -l info --workdir=/root/myblog/myblog --pidfile="/var/run/celery/celery.pid" --logfile="/var/log/celery/celery.log"
directory=/root/myblog/myblog
user=root
numprocs=1
startretries = 10
autostart=true
startsecs=3
autorestart=true
redirect_stderr=true
stopwaitsecs=60
stdout_logfile = /var/log/celery.log
stderr_logfile = /var/log/error.log
priority=998
stdout_capture_maxbytes = 33554432
stderr_logfile_maxbyte = 335544320
stderr_logfile_backups = 5






#[program:jupyter]
#command=/root/myblog/bin/python3.5 /root/myblog/myblog/manage.py shell_plus --notebook
#directory=/root/myblog/myblog
#user=root
#numprocs=1
#autostart=true
#startsecs=10
#autorestart=true
##redirect_stderr=true
#stopwaitsecs=30
##stdout_logfile = /var/log/celery/celery.log
#stderr_logfile = /var/log/celery/error.log
#environment=C_FORCE_ROOT="yes"
#enviroment=PATH=/root/myblog/myblog
##priority=9


[program:uwsgi]
environment=
	DJANGO_SETTINGS_MODULE=myblog.settings,
	VIRTUAL_ENV=/root/myblog

command=/root/myblog/bin/uwsgi --die-on-term --ini /root/myblog/myblog/uwsgi.ini
directory=/root/myblog/myblog
stopsignal=QUIT
numprocs=1
user=root
startretries =5
startsecs=5
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile = /var/log/uwsgi.log
stderr_logfile = /var/log/uwsgi-error.log

